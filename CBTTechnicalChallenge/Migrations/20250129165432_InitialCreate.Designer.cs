// <auto-generated />
using System;
using CBTTechnicalChallenge.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CBTTechnicalChallenge.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250129165432_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CBTTechnicalChallenge.Models.Language", b =>
                {
                    b.Property<string>("LanguageCode")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("LanguageCode");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            LanguageCode = "EN",
                            CreatedDate = new DateTime(2025, 1, 29, 16, 54, 31, 12, DateTimeKind.Utc).AddTicks(3797),
                            IsActive = true,
                            IsDefault = true,
                            LanguageName = "English"
                        },
                        new
                        {
                            LanguageCode = "MY",
                            CreatedDate = new DateTime(2025, 1, 29, 16, 54, 31, 12, DateTimeKind.Utc).AddTicks(3999),
                            IsActive = true,
                            IsDefault = false,
                            LanguageName = "Burmese"
                        });
                });

            modelBuilder.Entity("CBTTechnicalChallenge.Models.OtpVerification", b =>
                {
                    b.Property<int>("OtpID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OtpID"));

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("GeneratedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("ICNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OTPCode")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("UserICNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("OtpID");

                    b.HasIndex("UserICNumber");

                    b.ToTable("OtpVerifications");
                });

            modelBuilder.Entity("CBTTechnicalChallenge.Models.User", b =>
                {
                    b.Property<string>("ICNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LanguagePreference")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ICNumber");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("ICNumber")
                        .IsUnique();

                    b.HasIndex("LanguagePreference");

                    b.HasIndex("PhoneNumber")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CBTTechnicalChallenge.Models.OtpVerification", b =>
                {
                    b.HasOne("CBTTechnicalChallenge.Models.User", "User")
                        .WithMany("OtpVerifications")
                        .HasForeignKey("UserICNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CBTTechnicalChallenge.Models.User", b =>
                {
                    b.HasOne("CBTTechnicalChallenge.Models.Language", "Language")
                        .WithMany("Users")
                        .HasForeignKey("LanguagePreference")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("CBTTechnicalChallenge.Models.Language", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("CBTTechnicalChallenge.Models.User", b =>
                {
                    b.Navigation("OtpVerifications");
                });
#pragma warning restore 612, 618
        }
    }
}
